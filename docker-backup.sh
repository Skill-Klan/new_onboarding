#!/bin/bash

# ========================================
# DOCKER BACKUP –°–ö–†–ò–ü–¢ –î–õ–Ø SKILLKLAN
# ========================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ —Ç–∞ –¥–∞–Ω–∏—Ö

set -e

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
PROJECT_NAME="skillklan"
PROJECT_DIR="/var/www/skillklan"
BACKUP_DIR="/var/www/skillklan/backups"
BACKUP_RETENTION_DAYS=7
LOG_FILE="/var/www/skillklan/logs/backup.log"

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü—ñ—è –ø–æ–º–∏–ª–∫–∏
error() {
    echo -e "${RED}‚ùå $1${NC}" | tee -a "$LOG_FILE"
    exit 1
}

# –§—É–Ω–∫—Ü—ñ—è —É—Å–ø—ñ—Ö—É
success() {
    echo -e "${GREEN}‚úÖ $1${NC}" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü—ñ—è –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}" | tee -a "$LOG_FILE"
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
create_directories() {
    log "üìÅ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π..."
    
    mkdir -p "$BACKUP_DIR"
    mkdir -p "$(dirname "$LOG_FILE")"
    
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω—ñ"
}

# –†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö PostgreSQL
backup_database() {
    log "üóÑÔ∏è  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
    
    BACKUP_NAME="db_backup_$(date +%Y%m%d_%H%M%S).sql"
    BACKUP_PATH="$BACKUP_DIR/$BACKUP_NAME"
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó –∑ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if docker-compose exec -T postgres pg_dump -U skillklan_user skillklan_db > "$BACKUP_PATH"; then
        # –°—Ç–∏—Å–Ω–µ–Ω–Ω—è
        gzip "$BACKUP_PATH"
        BACKUP_PATH="$BACKUP_PATH.gz"
        
        success "–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –∑–±–µ—Ä–µ–∂–µ–Ω–∞: $BACKUP_PATH"
        echo "–†–æ–∑–º—ñ—Ä: $(du -h "$BACKUP_PATH" | cut -f1)"
    else
        warning "–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"
    fi
}

# –†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è Docker —Ç–æ–º—ñ–≤
backup_volumes() {
    log "üíæ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó Docker —Ç–æ–º—ñ–≤..."
    
    BACKUP_NAME="volumes_backup_$(date +%Y%m%d_%H%M%S).tar.gz"
    BACKUP_PATH="$BACKUP_DIR/$BACKUP_NAME"
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É –∑ Docker —Ç–æ–º–∞–º–∏
    tar -czf "$BACKUP_PATH" \
        -C /var/lib/docker/volumes \
        skillklan_postgres_data \
        skillklan_server_logs \
        skillklan_server_data \
        skillklan_nginx_logs 2>/dev/null || warning "–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é —Ç–æ–º—ñ–≤"
    
    if [ -f "$BACKUP_PATH" ]; then
        success "–¢–æ–º–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ: $BACKUP_PATH"
        echo "–†–æ–∑–º—ñ—Ä: $(du -h "$BACKUP_PATH" | cut -f1)"
    fi
}

# –†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
backup_config() {
    log "‚öôÔ∏è  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
    
    BACKUP_NAME="config_backup_$(date +%Y%m%d_%H%M%S).tar.gz"
    BACKUP_PATH="$BACKUP_DIR/$BACKUP_PATH"
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é
    tar -czf "$BACKUP_PATH" \
        --exclude="node_modules" \
        --exclude="*.log" \
        --exclude="backups" \
        --exclude=".git" \
        -C "$PROJECT_DIR" .
    
    success "–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞: $BACKUP_PATH"
    echo "–†–æ–∑–º—ñ—Ä: $(du -h "$BACKUP_PATH" | cut -f1)"
}

# –†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è Docker –æ–±—Ä–∞–∑—ñ–≤
backup_images() {
    log "üê≥ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó Docker –æ–±—Ä–∞–∑—ñ–≤..."
    
    BACKUP_NAME="images_backup_$(date +%Y%m%d_%H%M%S).tar"
    BACKUP_PATH="$BACKUP_DIR/$BACKUP_NAME"
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É –∑ Docker –æ–±—Ä–∞–∑–∞–º–∏
    docker save -o "$BACKUP_PATH" \
        skillklan_server:latest \
        postgres:16-alpine \
        nginx:alpine 2>/dev/null || warning "–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é –æ–±—Ä–∞–∑—ñ–≤"
    
    if [ -f "$BACKUP_PATH" ]; then
        # –°—Ç–∏—Å–Ω–µ–Ω–Ω—è
        gzip "$BACKUP_PATH"
        BACKUP_PATH="$BACKUP_PATH.gz"
        
        success "–û–±—Ä–∞–∑—ñ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ: $BACKUP_PATH"
        echo "–†–æ–∑–º—ñ—Ä: $(du -h "$BACKUP_PATH" | cut -f1)"
    fi
}

# –ü–æ–≤–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è
full_backup() {
    log "üîÑ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–≤–Ω–æ—ó —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó..."
    
    BACKUP_NAME="full_backup_$(date +%Y%m%d_%H%M%S).tar.gz"
    BACKUP_PATH="$BACKUP_DIR/$BACKUP_NAME"
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É –∑ —É—Å—ñ–º–∞ –¥–∞–Ω–∏–º–∏
    tar -czf "$BACKUP_PATH" \
        --exclude="node_modules" \
        --exclude="*.log" \
        --exclude="backups" \
        --exclude=".git" \
        -C "$PROJECT_DIR" .
    
    success "–ü–æ–≤–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞: $BACKUP_PATH"
    echo "–†–æ–∑–º—ñ—Ä: $(du -h "$BACKUP_PATH" | cut -f1)"
}

# –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π
cleanup_old_backups() {
    log "üßπ –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π..."
    
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —Å—Ç–∞—Ä—ñ—à–µ BACKUP_RETENTION_DAYS –¥–Ω—ñ–≤
    find "$BACKUP_DIR" -name "*.tar.gz" -mtime +$BACKUP_RETENTION_DAYS -delete
    find "$BACKUP_DIR" -name "*.sql.gz" -mtime +$BACKUP_RETENTION_DAYS -delete
    find "$BACKUP_DIR" -name "*.tar" -mtime +$BACKUP_RETENTION_DAYS -delete
    
    success "–°—Ç–∞—Ä—ñ —Ä–µ–∑–µ—Ä–≤–Ω—ñ –∫–æ–ø—ñ—ó –≤–∏–¥–∞–ª–µ–Ω—ñ"
}

# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_backup_stats() {
    log "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π..."
    
    echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: $BACKUP_DIR"
    echo "üìÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –¥–Ω—ñ–≤: $BACKUP_RETENTION_DAYS"
    echo ""
    
    # –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–∞–π–ª—ñ–≤
    TOTAL_FILES=$(find "$BACKUP_DIR" -type f | wc -l)
    echo "üìÑ –í—Å—å–æ–≥–æ —Ñ–∞–π–ª—ñ–≤: $TOTAL_FILES"
    
    # –ó–∞–≥–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä
    TOTAL_SIZE=$(du -sh "$BACKUP_DIR" | cut -f1)
    echo "üíæ –ó–∞–≥–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: $TOTAL_SIZE"
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤
    echo ""
    echo "üìã –°–ø–∏—Å–æ–∫ —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π:"
    ls -lh "$BACKUP_DIR" | grep -E "\.(tar\.gz|sql\.gz|tar)$" || echo "–†–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
}

# –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó
restore_backup() {
    log "üîÑ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó..."
    
    if [ -z "$1" ]; then
        error "–í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è"
    fi
    
    BACKUP_FILE="$BACKUP_DIR/$1"
    
    if [ ! -f "$BACKUP_FILE" ]; then
        error "–†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: $BACKUP_FILE"
    fi
    
    log "üì¶ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑: $1"
    
    # –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤
    cd "$PROJECT_DIR"
    docker-compose down
    
    # –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
    if [[ "$1" == *.sql.gz ]]; then
        # –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        log "üóÑÔ∏è  –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
        gunzip -c "$BACKUP_FILE" | docker-compose exec -T postgres psql -U skillklan_user -d skillklan_db
    elif [[ "$1" == *.tar.gz ]]; then
        # –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
        log "üìÅ –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤..."
        tar -xzf "$BACKUP_FILE" -C "$PROJECT_DIR"
    fi
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤—ñ—Å—ñ–≤
    docker-compose up -d
    
    success "–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    log "üíæ –ü–æ—á–∞—Ç–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Docker
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    fi
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
    create_directories
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–∏—Ö –∫–æ–ø—ñ–π
    backup_database
    backup_volumes
    backup_config
    backup_images
    full_backup
    
    # –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ñ–∞–π–ª—ñ–≤
    cleanup_old_backups
    
    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    show_backup_stats
    
    success "üéâ –†–µ–∑–µ—Ä–≤–Ω–µ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–æ–ø–æ–º–æ–≥–∏
show_help() {
    echo "üíæ Docker Backup Script –¥–ª—è SkillKlan"
    echo ""
    echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥–∏:"
    echo "  backup     - –°—Ç–≤–æ—Ä–∏—Ç–∏ –≤—Å—ñ —Ä–µ–∑–µ—Ä–≤–Ω—ñ –∫–æ–ø—ñ—ó (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)"
    echo "  restore    - –í—ñ–¥–Ω–æ–≤–∏—Ç–∏ –∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó"
    echo "  stats      - –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  cleanup    - –û—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞—Ä—ñ —Ä–µ–∑–µ—Ä–≤–Ω—ñ –∫–æ–ø—ñ—ó"
    echo "  help       - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–ø–æ–º–æ–≥—É"
    echo ""
    echo "–ü—Ä–∏–∫–ª–∞–¥–∏:"
    echo "  $0 backup                           # –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ñ –∫–æ–ø—ñ—ó"
    echo "  $0 restore full_backup_20241201_120000.tar.gz  # –í—ñ–¥–Ω–æ–≤–∏—Ç–∏"
    echo "  $0 stats                            # –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
}

# –û–±—Ä–æ–±–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
case "${1:-backup}" in
    "backup")
        main
        ;;
    "restore")
        restore_backup "$2"
        ;;
    "stats")
        show_backup_stats
        ;;
    "cleanup")
        cleanup_old_backups
        ;;
    "help"|"-h"|"--help")
        show_help
        ;;
    *)
        echo "–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞: $1"
        show_help
        exit 1
        ;;
esac



