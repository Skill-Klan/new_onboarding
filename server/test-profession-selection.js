#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–±–æ—Ä—É –ø—Ä–æ—Ñ–µ—Å—ñ—ó
 */

require('dotenv').config({ path: './.env' });

const { Profession } = require('./bot/types');

console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤–∏–±–æ—Ä—É –ø—Ä–æ—Ñ–µ—Å—ñ—ó...');

// –¢–µ—Å—Ç—É—î–º–æ extractProfession –ª–æ–≥—ñ–∫—É
function extractProfession(callbackData) {
  console.log('üîç extractProfession: callbackData =', callbackData);
  
  if (callbackData === 'profession_QA') {
    console.log('‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ QA');
    return Profession.QA;
  } else if (callbackData === 'profession_BA') {
    console.log('‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ BA');
    return Profession.BA;
  }
  
  console.log('‚ùå –ü—Ä–æ—Ñ–µ—Å—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞');
  return null;
}

// –¢–µ—Å—Ç—É—î–º–æ —Ä—ñ–∑–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏
const testCases = [
  'profession_QA',
  'profession_BA',
  'profession_INVALID',
  'ready_to_try',
  null,
  undefined
];

console.log('üìã –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö callback_data:');
testCases.forEach((testCase, index) => {
  console.log(`\n${index + 1}. –¢–µ—Å—Ç: "${testCase}"`);
  const result = extractProfession(testCase);
  console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}`);
});

console.log('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
