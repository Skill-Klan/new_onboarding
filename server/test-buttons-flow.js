#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç —Ñ–ª–æ—É –∫–Ω–æ–ø–æ–∫ –Ω–∞–ø—Ä—è–º–∫—ñ–≤ –Ω–∞–≤—á–∞–Ω–Ω—è
 */

require('dotenv').config({ path: './.env' });

const FlowBot = require('./bot/FlowBot');
const { Profession } = require('./bot/types');

console.log('üîç –¢–µ—Å—Ç —Ñ–ª–æ—É –∫–Ω–æ–ø–æ–∫ –Ω–∞–ø—Ä—è–º–∫—ñ–≤ –Ω–∞–≤—á–∞–Ω–Ω—è...');

async function testButtonsFlow() {
  try {
    console.log('üîç –°—Ç–≤–æ—Ä—é—î–º–æ FlowBot...');
    const flowBot = new FlowBot();
    
    console.log('üîç –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞...');
    await flowBot.start();
    
    console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!');
    console.log('');
    console.log('üì± –¢–ï–°–¢ –ö–ù–û–ü–û–ö:');
    console.log('1. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ /start –±–æ—Ç—É');
    console.log('2. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "1Ô∏è‚É£ QA ‚Äî —Ö–æ—á—É —Ç–µ—Å—Ç—É–≤–∞—Ç–∏!"');
    console.log('3. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –ø—Ä–∏–π—à–æ–≤ –æ–ø–∏—Å QA');
    console.log('4. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–¢–∞–∫! –•–æ—á—É —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ üöÄ"');
    console.log('5. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –ø—Ä–∏–π—à–ª–∞ –∫–Ω–æ–ø–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç—É');
    console.log('');
    console.log('üîç –î–ï–¢–ê–õ–¨–ù–Ü –õ–û–ì–ò:');
    console.log('- –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —á–∏ callback_data –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è');
    console.log('- –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —á–∏ extractProfession –ø—Ä–∞—Ü—é—î');
    console.log('- –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ —á–∏ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
    console.log('');
    console.log('‚è∞ 20 —Å–µ–∫—É–Ω–¥...');
    
    setTimeout(() => {
      console.log('üõë –ó—É–ø–∏–Ω—è—î–º–æ —Ç–µ—Å—Ç...');
      flowBot.stop('–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      process.exit(0);
    }, 20000);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É:', error);
    console.error('Stack:', error.stack);
    process.exit(1);
  }
}

testButtonsFlow();

