/**
 * LoggingMiddleware - Middleware –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
 * 
 * –õ–æ–≥—É—î –≤—Å—ñ –≤—Ö—ñ–¥–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ callback queries.
 * –ó–∞–≤–∂–¥–∏ –¥–æ–∑–≤–æ–ª—è—î –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏.
 */

const BaseMiddleware = require('./BaseMiddleware');

class LoggingMiddleware extends BaseMiddleware {
  constructor() {
    super();
    this.log('–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è LoggingMiddleware');
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ middleware
   */
  async process(ctx) {
    this.log('–û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—É');
    
    try {
      // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      if (ctx.message) {
        this.logMessage(ctx.message);
      }
      
      // –õ–æ–≥—É–≤–∞–Ω–Ω—è callback query
      if (ctx.callbackQuery) {
        this.logCallbackQuery(ctx.callbackQuery);
      }
      
      // –ó–∞–≤–∂–¥–∏ –¥–æ–∑–≤–æ–ª—è—î–º–æ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è
      return { continue: true };
      
    } catch (error) {
      console.error('‚ùå LoggingMiddleware: –ü–æ–º–∏–ª–∫–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è:', error);
      // –ù–∞–≤—ñ—Ç—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–æ–∑–≤–æ–ª—è—î–º–æ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è
      return { continue: true };
    }
  }

  /**
   * –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
   */
  logMessage(message) {
    const user = message.from;
    const text = message.text || '[–Ω–µ —Ç–µ–∫—Å—Ç]';
    
    console.log(`üì® –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ ${user.first_name} (@${user.username || '–±–µ–∑ username'}): ${text}`);
  }

  /**
   * –õ–æ–≥—É–≤–∞–Ω–Ω—è callback query
   */
  logCallbackQuery(callbackQuery) {
    const user = callbackQuery.from;
    const data = callbackQuery.data;
    
    console.log(`üîò Callback –≤—ñ–¥ ${user.first_name} (@${user.username || '–±–µ–∑ username'}): ${data}`);
  }
}

module.exports = LoggingMiddleware;
