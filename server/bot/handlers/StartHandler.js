// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start

const BaseHandler = require('./BaseHandler');
const { BotStep } = require('../types');

class StartHandler extends BaseHandler {
  async execute(ctx, userState) {
    try {
      console.log('üöÄ StartHandler: –ü–æ—á–∞—Ç–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è');
      
      const { MessageTemplates } = require('../templates/messages');
      console.log('‚úÖ StartHandler: MessageTemplates –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
      
      const { KeyboardTemplates } = require('../templates/keyboards');
      console.log('‚úÖ StartHandler: KeyboardTemplates –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
      
      // –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      const userInfo = this.getUserInfo(ctx);
      console.log('‚úÖ StartHandler: userInfo –æ—Ç—Ä–∏–º–∞–Ω–æ:', userInfo);
      
      // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å—Ç–∞–Ω—ñ
      userState.username = userInfo.username;
      userState.userId = userInfo.id;
      console.log('‚úÖ StartHandler: userState –æ–Ω–æ–≤–ª–µ–Ω–æ:', userState);
      
      // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
      const welcomeMessage = MessageTemplates.getWelcomeMessage();
      console.log('‚úÖ StartHandler: welcomeMessage –æ—Ç—Ä–∏–º–∞–Ω–æ:', welcomeMessage);
      
      const professionKeyboard = KeyboardTemplates.getProfessionKeyboard();
      console.log('‚úÖ StartHandler: professionKeyboard –æ—Ç—Ä–∏–º–∞–Ω–æ:', professionKeyboard);
      
      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      console.log('üì§ StartHandler: –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...');
      await this.safeReply(
        ctx, 
        welcomeMessage,
        professionKeyboard
      );
      console.log('‚úÖ StartHandler: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
      
    } catch (error) {
      console.error('‚ùå StartHandler: –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:', error);
      console.error('‚ùå StartHandler: Stack trace:', error.stack);
      
      // –°–ø—Ä–æ–±—É—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø—Ä–æ—Å—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
      try {
        await ctx.reply('–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      } catch (replyError) {
        console.error('‚ùå StartHandler: –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É:', replyError);
      }
    }
  }

  getNextStep() {
    return BotStep.PROFESSION_SELECTION;
  }
}

module.exports = StartHandler;
