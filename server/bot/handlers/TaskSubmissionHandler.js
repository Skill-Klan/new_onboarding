// –û–±—Ä–æ–±–Ω–∏–∫ –∑–¥–∞—á—ñ –∑–∞–≤–¥–∞–Ω–Ω—è

const BaseHandler = require('./BaseHandler');
const { BotStep } = require('../types');

class TaskSubmissionHandler extends BaseHandler {
  async execute(ctx, userState) {
    const MessageTemplates = require('../templates/messages');
    const KeyboardTemplates = require('../templates/keyboards');
    
    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    await this.safeReply(
      ctx, 
      MessageTemplates.getTaskSubmissionMessage(),
      KeyboardTemplates.getMainMenuKeyboard()
    );
    
    // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ callback
    await ctx.answerCbQuery();

    // –õ–æ–≥—É—î–º–æ –∑–¥–∞—á—É –∑–∞–≤–¥–∞–Ω–Ω—è
    console.log(`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${userState.telegramId} –≥–æ—Ç–æ–≤–∏–π –∑–¥–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—ñ—ó ${userState.selectedProfession}`);

    // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    await this.notifyManager(userState);
  }

  getNextStep() {
    return BotStep.COMPLETED;
  }

  /**
   * –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   */
  async notifyManager(userState) {
    try {
      // –¢—É—Ç –º–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ª–æ–≥—ñ–∫—É —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∞–¥–º—ñ–Ω-—á–∞—Ç
      console.log(`–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–≤–∏–Ω–µ–Ω –∑–≤'—è–∑–∞—Ç–∏—Å—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º ${userState.telegramId}`);
      
      // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å –≤ –ë–î –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
      // await this.databaseService.createManagerNotification(userState);
      
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞:', error);
    }
  }

  /**
   * –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Å—Ç–∞–Ω—É –¥–ª—è —Ü—å–æ–≥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
   */
  validateState(userState) {
    console.log('üîçüîçüîç TaskSubmissionHandler.validateState: –ü–û–ß–ê–¢–û–ö');
    console.log('üîçüîçüîç TaskSubmissionHandler.validateState: userState =', userState);
    console.log('üîçüîçüîç TaskSubmissionHandler.validateState: userState.currentStep =', userState?.currentStep);
    console.log('üîçüîçüîç TaskSubmissionHandler.validateState: userState.taskSent =', userState?.taskSent);
    
    const superValid = super.validateState(userState);
    const taskSentValid = userState.taskSent === true;
    
    console.log('üîçüîçüîç TaskSubmissionHandler.validateState: superValid =', superValid);
    console.log('üîçüîçüîç TaskSubmissionHandler.validateState: taskSentValid =', taskSentValid);
    console.log('üîçüîçüîç TaskSubmissionHandler.validateState: –∑–∞–≥–∞–ª—å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç =', superValid && taskSentValid);
    
    return superValid && taskSentValid;
  }
}

module.exports = TaskSubmissionHandler;
