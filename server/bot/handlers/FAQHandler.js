// –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–∫–∞–∑—É FAQ

const BaseHandler = require('./BaseHandler');

class FAQHandler extends BaseHandler {
  async execute(ctx, userState) {
    // URL –¥–æ MiniApp FAQ
    const faqUrl = process.env.WEBAPP_URL || 'https://your-username.github.io/new_onboarding/faq';
    
    // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ MiniApp FAQ
    await ctx.reply('üìö –í—ñ–¥–∫—Ä–∏–≤–∞—é FAQ –¥–ª—è –≤–∞—Å...', {
      reply_markup: {
        inline_keyboard: [[
          {
            text: 'üìö –í—ñ–¥–∫—Ä–∏—Ç–∏ FAQ',
            web_app: { url: faqUrl }
          }
        ]]
      }
    });
    
    // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ callback
    await ctx.answerCbQuery();
  }

  getNextStep() {
    // –ù–µ –∑–º—ñ–Ω—é—î–º–æ –∫—Ä–æ–∫, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –Ω–∞ –ø–æ—Ç–æ—á–Ω–æ–º—É –µ—Ç–∞–ø—ñ
    return null;
  }

  /**
   * –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Å—Ç–∞–Ω—É –¥–ª—è —Ü—å–æ–≥–æ –æ–±—Ä–æ–±–Ω–∏–∫–∞
   */
  validateState(userState) {
    // FAQ –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∞ –±—É–¥—å-—è–∫–æ–º—É –µ—Ç–∞–ø—ñ
    return super.validateState(userState);
  }
}

module.exports = FAQHandler;
