/**
 * HelpFlow - Flow –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–æ–ø–æ–º–æ–≥–∏
 */

const BaseFlow = require('./BaseFlow');
const BotConfig = require('../config/BotConfig');

class HelpFlow extends BaseFlow {
  constructor(databaseService, webhookService) {
    super(databaseService, webhookService);
    this.log('–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è HelpFlow');
  }

  async canHandle(ctx) {
    // –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–º–∞–Ω–¥–∏ –¥–æ–ø–æ–º–æ–≥–∏
    return ctx.message && ctx.message.text === '/help';
  }

  async canHandleCallback(ctx) {
    // –û–±—Ä–æ–±–ª—è—î–º–æ callback –¥–ª—è FAQ
    return ctx.callbackQuery?.data === 'show_faq';
  }

  async handle(ctx) {
    this.log('–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /help');
    
    try {
      const message = '–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n/start - –ø–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É\n/help - –ø–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É\n\n–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–ú–∞—î—à –ø–∏—Ç–∞–Ω–Ω—è?"';
      await this.safeReply(ctx, message);
      
      this.log('–ö–æ–º–∞–Ω–¥–∞ /help –æ–±—Ä–æ–±–ª–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ');
      
    } catch (error) {
      console.error('‚ùå HelpFlow: –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ /help:', error);
      await this.safeReply(ctx, '–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
    }
  }

  async handleCallback(ctx) {
    this.log('–û–±—Ä–æ–±–∫–∞ callback FAQ');
    
    try {
      // URL –¥–æ MiniApp FAQ –Ω–∞ GitHub Pages
      const faqUrl = process.env.WEBAPP_URL || 'https://skill-klan.github.io/new_onboarding/';
      
      // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ MiniApp FAQ
      await ctx.reply('üìö –í—ñ–¥–∫—Ä–∏–≤–∞—é FAQ –¥–ª—è –≤–∞—Å...', {
        reply_markup: {
          inline_keyboard: [[
            {
              text: 'üìö –í—ñ–¥–∫—Ä–∏—Ç–∏ FAQ',
              web_app: { url: faqUrl }
            }
          ]]
        }
      });
      
      this.log('FAQ –≤—ñ–¥–∫—Ä–∏—Ç–æ —É—Å–ø—ñ—à–Ω–æ');
      
    } catch (error) {
      console.error('‚ùå HelpFlow: –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è FAQ:', error);
      await this.safeReply(ctx, '–í–∏–±–∞—á—Ç–µ, –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–∫—Ä–∏—Ç–∏ FAQ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
    }
  }
}

module.exports = HelpFlow;
