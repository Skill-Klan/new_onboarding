#!/usr/bin/env node

/**
 * –î–µ—Ç–∞–ª—å–Ω–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö —Ñ–ª–æ—É FlowBot
 */

require('dotenv').config({ path: './.env' });

const FlowBot = require('./bot/FlowBot');

console.log('üß™ –î–µ—Ç–∞–ª—å–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö —Ñ–ª–æ—É FlowBot...');

async function testAllFlows() {
  try {
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞...');
    if (!process.env.TELEGRAM_BOT_TOKEN) {
      throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ .env —Ñ–∞–π–ª—ñ');
    }
    console.log('‚úÖ –¢–æ–∫–µ–Ω –∑–Ω–∞–π–¥–µ–Ω–æ');

    console.log('üîç –°—Ç–≤–æ—Ä—é—î–º–æ FlowBot...');
    const flowBot = new FlowBot();
    
    console.log('üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ FlowBot:');
    console.log(JSON.stringify(flowBot.getInfo(), null, 2));
    
    console.log('üîç –¢–µ—Å—Ç—É—î–º–æ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
    await flowBot.start();
    
    console.log('‚úÖ FlowBot –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
    console.log('üéâ –ù–æ–≤–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–∞—Ü—é—î –ª–æ–∫–∞–ª—å–Ω–æ!');
    console.log('ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤ Telegram');
    console.log('');
    console.log('üìã –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ–ª–æ—É:');
    console.log('1. /start - OnboardingFlow');
    console.log('2. –í–∏–±—ñ—Ä –ø—Ä–æ—Ñ–µ—Å—ñ—ó - OnboardingFlow');
    console.log('3. "–¢–∞–∫ —Ö–æ—á—É —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏" - OnboardingFlow');
    console.log('4. –ù–∞–¥–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É - ContactFlow');
    console.log('5. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è - TaskFlow');
    console.log('6. /help - HelpFlow');
    console.log('7. FAQ –∫–Ω–æ–ø–∫–∞ - HelpFlow');
    console.log('');
    console.log('‚è∞ –ë–æ—Ç –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è...');
    
    // –ó—É–ø–∏–Ω—è—î–º–æ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    setTimeout(() => {
      console.log('üõë –ó—É–ø–∏–Ω—è—î–º–æ –±–æ—Ç–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–µ—Å—Ç—É...');
      flowBot.stop('–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      process.exit(0);
    }, 30000);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è FlowBot:', error);
    process.exit(1);
  }
}

testAllFlows();
