#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–ø–∏—Å—ñ–≤ –ø—Ä–æ—Ñ–µ—Å—ñ–π
 */

const { Profession } = require('./bot/types');
const MessageTemplates = require('./bot/templates/messages');

console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–ø–∏—Å—ñ–≤ –ø—Ä–æ—Ñ–µ—Å—ñ–π...');

function getProfessionDescription(profession) {
  console.log('üîç getProfessionDescription: profession =', profession);
  
  switch (profession) {
    case Profession.QA:
      console.log('‚úÖ –í–∏–±—Ä–∞–Ω–æ QA');
      return MessageTemplates.getQADescription();
    case Profession.BA:
      console.log('‚úÖ –í–∏–±—Ä–∞–Ω–æ BA');
      return MessageTemplates.getBADescription();
    default:
      console.log('‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –ø—Ä–æ—Ñ–µ—Å—ñ—è');
      return MessageTemplates.getErrorMessage();
  }
}

// –¢–µ—Å—Ç—É—î–º–æ —Ä—ñ–∑–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏
const testCases = [
  { input: 'QA', expected: 'QA' },
  { input: 'BA', expected: 'BA' },
  { input: 'INVALID', expected: 'ERROR' }
];

testCases.forEach((testCase, index) => {
  console.log(`\n${index + 1}. –¢–µ—Å—Ç: "${testCase.input}"`);
  const result = getProfessionDescription(testCase.input);
  console.log('üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:');
  console.log(result);
  console.log('---');
});

console.log('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
